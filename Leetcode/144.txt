/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
    vector<int> ans, leftvec, rightvec;
    if (root == NULL)
        return ans;
    ans.push_back(root->val);
    if (root->left != NULL) {
        leftvec= preorderTraversal(root->left);
        ans.insert(ans.end(), leftvec.begin(), leftvec.end());
            
    }
    if (root->right != NULL) {
        rightvec = preorderTraversal(root->right);
        ans.insert(ans.end(), rightvec.begin(), rightvec.end());

    }
    return ans;
        
    }
};